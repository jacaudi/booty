variant: flatcar
version: 1.1.0
passwd:
  users:
    - name: core
      ssh_authorized_keys: [] # Add your SSH keys here
storage:
  filesystems:
    - device: /dev/sda
      format: ext4
      path: /var/lib/containerd
      wipe_filesystem: true
      label: ssd
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: {{ .Hostname }}
    - path: /opt/cni.sh
      contents:
        source: http://{{ .ServerIP }}/data/config/cni.sh
      mode: 0775
    - path: /opt/systemd.sh
      contents:
        source: http://{{ .ServerIP }}/data/config/systemd.sh
      mode: 0775
    - path: /opt/kube-tools.sh
      contents:
        source: http://{{ .ServerIP }}/data/config/kube-tools.sh
      mode: 0775
    - path: /opt/join.sh
      contents:
        source: http://{{ .ServerIP }}/data/config/join.sh
      mode: 0775
    - path: /opt/version-check.sh
      contents:
        source: http://{{ .ServerIP }}/data/config/version-check.sh
      mode: 0775
systemd:
  units:
    - name: var-lib-containerd.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount ephemeral to /var/lib/containerd
        Before=local-fs.target
        [Mount]
        What=/dev/disk/by-label/ssd
        Where=/var/lib/containerd
        Type=ext4
        [Install]
        WantedBy=local-fs.target        
    - enabled: true
      name: containerd.service
      dropins:
        - name: 10-wait-containerd.conf
          contents: |
            [Unit]
            After=var-lib-containerd.mount
            Requires=var-lib-containerd.mount 
    - name: update.service
      contents: |
        [Unit]
        Description=Compares current version to remote version

        [Service]
        Environment="BOOTY_IP={{ .ServerIP }}"
        Type=oneshot
        ExecStart=/opt/version-check.sh
    - name: update.timer
      enabled: true
      contents: |
        [Unit]
        Description=Run update-check every 10 minutes

        [Timer]
        OnCalendar=*:0/10

        [Install]
        WantedBy=multi-user.target
    - enabled: true
      name: cni-install.service
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=k8s installation script
        Wants=network-online.target
        After=network.target network-online.target

        [Service]
        Type=oneshot
        ExecStart=/opt/cni.sh
    - enabled: true
      name: kube-tools-install.service
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=k8s installation script
        Requires=cni-install.service
        After=cni-install.service

        [Service]
        Type=oneshot
        ExecStart=/opt/kube-tools.sh
    - enabled: true
      name: systemd-k8s-setup.service
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=k8s installation script
        Requires=kube-tools-install.service
        After=kube-tools-install.service

        [Service]
        Type=oneshot
        ExecStart=/opt/systemd.sh
    - enabled: true
      name: k8s-join.service
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=k8s join script
        Requires=systemd-k8s-setup.service
        After=systemd-k8s-setup.service

        [Service]
        Environment="JOIN_STRING={{ .JoinString }}"
        Type=oneshot
        ExecStart=/bin/bash -c 'PATH=/opt/bin:$PATH exec /opt/join.sh'